python manage.py makemigrations
python manage.py migrate
python manage.py shell
from news.models import *
user1 = User.objects.create_user(username = 'ivan1', first_name = 'Ivan')
user2 = User.objects.create_user(username = 'petr1', first_name = 'Petr')
Author.objects.create(userAuthor = user1)
Author.objects.create(userAuthor = user2)
Category.objects.create(NameCategory = 'sport')
Category.objects.create(NameCategory = 'policy')
Category.objects.create(NameCategory = 'educatio')
Category.objects.create(NameCategory = 'science')
Post.objects.create(author=Author.objects.get(userAuthor=User.objects.get(username='petr1')), post='NW', title=' title Petra new', text='text Petra new')
Post.objects.create(author=Author.objects.get(userAuthor=User.objects.get(username='ivan1')), post='AR', title=' title Ivana article', text='text Ivana article')
Post.objects.create(author=Author.objects.get(userAuthor=User.objects.get(username='ivan1')), post='NW', title=' title Ivana new', text='text Ivana new')
p1 = Post.objects.get(pk=1)
p2 = Post.objects.get(pk=2)
p3 = Post.objects.get(pk=3)
c1 = Category.objects.get(NameCategory='sport')
c2 = Category.objects.get(NameCategory='policy')
c3 = Category.objects.get(NameCategory='educatio')
c4 = Category.objects.get(NameCategory='science')
p1.category.add(c1)
p2.category.add(c3, c4)
p3.category.add(c2, c4)
Comment.objects.create(userComment=User.objects.get(username='ivan1'), postComment=Post.objects.get(pk=1), textComment='comment Ivana text1')
Comment.objects.create(userComment=User.objects.get(username='ivan1'), postComment=Post.objects.get(pk=2), textComment='comment Ivana text2')
Comment.objects.create(userComment=User.objects.get(username='petr1'), postComment=Post.objects.get(pk=2), textComment='comment Petra text2')
Comment.objects.create(userComment=User.objects.get(username='petr1'), postComment=Post.objects.get(pk=2), textComment='comment Petra text3')
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).dislike()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=4).dislike()
Comment.objects.get(pk=3).like()

Author.objects.get(userAuthor = User.objects.get(username="ivan1")).update_rating()
Author.objects.get(userAuthor = User.objects.get(username="petr1")).update_rating()

bestAuthor = Author.objects.all().order_by('-ratingAuthor').first()
best = {bestAuthor.userAuthor.username:bestAuthor.ratingAuthor}
print(best)

bestPost = Post.objects.all().order_by('-ratingPost').first()
info = (bestPost.author.userAuthor.username,bestPost.ratingPost,bestPost.title,Post.preview(bestPost),bestPost.datatime)
print(info)

bestComments = Comment.objects.filter(postComment = bestPost.ratingPost)
bestComments.values('userComment','ratingComment','textComment','datatime')
